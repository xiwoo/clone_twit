{"version":3,"sources":["fConfig.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","initializeAuth","auth","getAuth","updateProfile","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","browserPopupRedirectResolver","GoogleAuthProvider","GithubAuthProvider","dbService","getFirestore","db","collection","doc","query","where","orderBy","addDoc","getDocs","onSnapshot","deleteDoc","updateDoc","storageService","getStorage","storage","ref","uploadString","getDownloadURL","deleteObject","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","id","attachmentURL","onSubmit","e","preventDefault","toggleEditing","prev","value","onChange","target","type","onClick","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","uid","uuidv4","response","createdAt","Date","now","creatorId","placeholder","maxLength","accept","theFile","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","snapshot","docs","map","x","data","n","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","event","name","message","required","Auth","onSocialClick","provider","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","currentUser","getMyNweets","console","log","forEach","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2688432f.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { \r\n  initializeAuth, \r\n  getAuth, updateProfile,\r\n  createUserWithEmailAndPassword, signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  browserPopupRedirectResolver,\r\n  GithubAuthProvider, GoogleAuthProvider, \r\n} from \"firebase/auth\"\r\nimport { \r\n  getFirestore, \r\n  collection, doc,\r\n  query, where, orderBy,\r\n  addDoc, getDocs, onSnapshot, deleteDoc, updateDoc\r\n} from \"firebase/firestore\";\r\n\r\nimport {\r\n  getStorage, \r\n  ref, uploadString, getDownloadURL, deleteObject\r\n} from \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGEING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n//auth\r\nexport const authService = initializeAuth(app);\r\nexport const auth = {\r\n  getAuth, updateProfile,\r\n  createUserWithEmailAndPassword, signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  browserPopupRedirectResolver,\r\n  GoogleAuthProvider, GithubAuthProvider,\r\n}\r\n\r\n//db store\r\nexport const dbService = getFirestore(app);\r\nexport const db = {\r\n  collection, doc, \r\n  query, where, orderBy,\r\n  addDoc, getDocs, onSnapshot, deleteDoc, updateDoc\r\n};\r\n\r\nexport const storageService = getStorage(app);\r\nexport const storage = {\r\n  ref, uploadString, getDownloadURL, deleteObject\r\n}\r\n","import { useState } from \"react\";\r\nimport { dbService, db, storageService, storage } from \"fConfig\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n\r\n  const [ editing, setEditing ] = useState(false);\r\n  const [ newNweet, setNewNweet ] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    if(window.confirm(\"삭제하시겠습니까?\")) {\r\n      await db.deleteDoc(db.doc(dbService, `nweets/${nweetObj.id}`));\r\n      if(nweetObj.attachmentURL !== \"\") {\r\n        const ref = storage.ref(storageService, nweetObj.attachmentURL);\r\n        await storage.deleteObject(ref);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: {value}\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    await db.updateDoc(db.doc(dbService, `nweets/${nweetObj.id}`), {text: newNweet});\r\n    setEditing(false);\r\n  };\r\n\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        editing ? \r\n        (\r\n          <>\r\n            <form onSubmit={onSubmit}>\r\n              <input value={newNweet} onChange={onChange}/>\r\n              <input type=\"submit\" value=\"Update Nweet\" />\r\n            </form>\r\n            <button onClick={toggleEditing}>Cancel</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {\r\n              nweetObj.attachmentURL && (\r\n                <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" />\r\n              )\r\n            }\r\n            {\r\n              isOwner && (\r\n                <>\r\n                  <button onClick={onDeleteClick}>Delete Nweet</button>\r\n                  <button onClick={toggleEditing}>Edit Nweet</button>\r\n                </>\r\n              )\r\n            }\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, db, storageService, storage } from \"fConfig\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = (userObj) => {\r\n  \r\n  const [ nweet, setNweet ] = useState(\"\");\r\n  const [ attachment, setAttachment ] = useState(\"\");\r\n  \r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    let attachmentURL = \"\";\r\n    if(attachment !== \"\") {\r\n      const ref = storage.ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await storage.uploadString(ref, attachment, 'data_url');\r\n      attachmentURL = await storage.getDownloadURL(response.ref);\r\n    }\r\n\r\n    await db.addDoc(\r\n      db.collection(dbService, \"nweets\"),\r\n      {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentURL,\r\n      }\r\n    );\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    const {\r\n      target: {value},\r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = e => {\r\n    const {\r\n      target: {files},\r\n    } = e;\r\n    const theFile = files[0];\r\n    if(theFile) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = e => {\r\n        const {\r\n          currentTarget: {result},\r\n        } = e;\r\n        setAttachment(result);\r\n      };\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n    <input\r\n      value={nweet}\r\n      onChange={onChange}\r\n      type=\"text\"\r\n      placeholder=\"What's on your mind?\"\r\n      maxLength={120}\r\n    />\r\n    <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n    <input type=\"submit\" value=\"Nweet\" />\r\n    {attachment && (\r\n      <div>\r\n        <img src={attachment} width=\"50px\" height=\"50px\" />\r\n        <button onClick={onClearAttachment} >Clear</button>\r\n      </div>\r\n    )}\r\n  </form>\r\n  )\r\n};\r\n\r\nexport default NweetFactory;","import { useEffect, useState } from \"react\";\r\nimport { dbService, db } from \"fConfig\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n\r\n  const [ nweets, setNweets ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.onSnapshot(\r\n      db.collection(dbService, \"nweets\"),\r\n      snapshot => {\r\n        setNweets(snapshot.docs.map(x => ({id: x.id, ...x.data()})));\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory \r\n        userObj={userObj}\r\n      />\r\n      <div>\r\n        {nweets.map(n => \r\n          <Nweet\r\n            key={n.id}\r\n            nweetObj={n}  \r\n            isOwner={n.creatorId === userObj.uid}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Home;","import { useState } from \"react\";\r\nimport { authService, auth } from \"fConfig\";\r\n\r\nconst AuthForm = () => {\r\n  \r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n\r\n    const {\r\n      target: {name, value},\r\n    } = event;\r\n\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      let data;\r\n      if(newAccount) {\r\n        data = await auth.createUserWithEmailAndPassword(authService, email, password);\r\n      } \r\n      else {\r\n        data = await auth.signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      \r\n    } catch(e) {\r\n      setError(e.message);\r\n    }\r\n  }\r\n\r\n  const toggleAccount = () => setNewAccount(prev => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required value={password} onChange={onChange}/>\r\n        <input type=\"submit\" value=\"Log In\" value={newAccount ? \"Create Account\" : \"Log In\"}/>\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm;","import { authService, auth } from \"fConfig\";\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n\r\n  const onSocialClick = async event => {\r\n    \r\n    const {\r\n      target: {name},\r\n    } = event;\r\n\r\n    let provider;\r\n\r\n    if(name === \"google\") {\r\n      provider = new auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new auth.GithubAuthProvider();\r\n    }\r\n    await auth.signInWithPopup(authService, provider, auth.browserPopupRedirectResolver)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AuthForm />\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n      </div> \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Auth;","import { authService, auth, dbService, db } from \"fConfig\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [ newDisplayName, setNewDisplayName ] = useState(userObj.displayName);\r\n  \r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = event => {\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  }\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName) {\r\n      await auth.updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName\r\n      });\r\n      refreshUser();\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const getMyNweets = async () => {\r\n    console.log(userObj.uid);\r\n    const nweets = await db.query(\r\n      db.collection(dbService, \"nweets\"), \r\n      db.where(\"creatorId\", \"==\", userObj.uid),\r\n      db.orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    console.log(nweets);\r\n    const snapshot = await db.getDocs(nweets);\r\n    console.log(snapshot.docs);\r\n    snapshot.docs.forEach(x => console.log(x.data()))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Display name\" \r\n          onChange={onChange} \r\n          value={newDisplayName} \r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick} >Log out</button>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n  console.log(userObj);\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj && userObj.displayName}의 Profile</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {\r\n          isLoggedIn ? (\r\n            <>\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile refreshUser={refreshUser} userObj={userObj} />\r\n              </Route>\r\n            </>\r\n          )\r\n          : (\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          )\r\n        }\r\n      </Switch>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from 'react';\r\nimport { authService } from \"fConfig\";\r\nimport AppRouter from \"components/Router\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n  const [ userObj, setUserObj ] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        setIsLoggedIn(user);\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          // updateProfile: (args) \r\n        });\r\n      }\r\n      else {\r\n        // setIsLoggedIn(false);\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    setUserObj(authService.currentUser);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {init ? <AppRouter \r\n        isLoggedIn={isLoggedIn} \r\n        userObj={userObj} \r\n        refreshUser={refreshUser}\r\n      /> : \"initializing...\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
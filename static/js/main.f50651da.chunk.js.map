{"version":3,"sources":["fConfig.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","initializeAuth","auth","getAuth","updateProfile","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","browserPopupRedirectResolver","GoogleAuthProvider","GithubAuthProvider","dbService","getFirestore","db","collection","doc","query","where","orderBy","addDoc","getDocs","onSnapshot","deleteDoc","updateDoc","storageService","getStorage","storage","ref","uploadString","getDownloadURL","deleteObject","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","id","attachmentURL","onSubmit","e","preventDefault","toggleEditing","prev","className","value","onChange","target","required","placeholder","autoFocus","type","onClick","createdAt","src","width","height","icon","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","uid","uuidv4","response","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","snapshot","docs","map","x","data","marginTop","n","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","event","name","message","Auth","onSocialClick","provider","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","currentUser","getMyNweets","console","log","forEach","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f50651da.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { \r\n  initializeAuth, \r\n  getAuth, updateProfile,\r\n  createUserWithEmailAndPassword, signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  browserPopupRedirectResolver,\r\n  GithubAuthProvider, GoogleAuthProvider, \r\n} from \"firebase/auth\"\r\nimport { \r\n  getFirestore, \r\n  collection, doc,\r\n  query, where, orderBy,\r\n  addDoc, getDocs, onSnapshot, deleteDoc, updateDoc\r\n} from \"firebase/firestore\";\r\n\r\nimport {\r\n  getStorage, \r\n  ref, uploadString, getDownloadURL, deleteObject\r\n} from \"firebase/storage\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGEING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n//auth\r\nexport const authService = initializeAuth(app);\r\nexport const auth = {\r\n  getAuth, updateProfile,\r\n  createUserWithEmailAndPassword, signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  browserPopupRedirectResolver,\r\n  GoogleAuthProvider, GithubAuthProvider,\r\n}\r\n\r\n//db store\r\nexport const dbService = getFirestore(app);\r\nexport const db = {\r\n  collection, doc, \r\n  query, where, orderBy,\r\n  addDoc, getDocs, onSnapshot, deleteDoc, updateDoc\r\n};\r\n\r\nexport const storageService = getStorage(app);\r\nexport const storage = {\r\n  ref, uploadString, getDownloadURL, deleteObject\r\n}\r\n","import { useState } from \"react\";\r\nimport { dbService, db, storageService, storage } from \"fConfig\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({nweetObj, isOwner}) => {\r\n\r\n  const [ editing, setEditing ] = useState(false);\r\n  const [ newNweet, setNewNweet ] = useState(nweetObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    if(window.confirm(\"삭제하시겠습니까?\")) {\r\n      await db.deleteDoc(db.doc(dbService, `nweets/${nweetObj.id}`));\r\n      if(nweetObj.attachmentURL !== \"\") {\r\n        const ref = storage.ref(storageService, nweetObj.attachmentURL);\r\n        await storage.deleteObject(ref);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: {value}\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    await db.updateDoc(db.doc(dbService, `nweets/${nweetObj.id}`), {text: newNweet});\r\n    setEditing(false);\r\n  };\r\n\r\n  const toggleEditing = () => setEditing(prev => !prev);\r\n\r\n  return (\r\n    <div className=\"nweet\">\r\n      {\r\n        editing ? \r\n        (\r\n          <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n              <input \r\n                value={newNweet} \r\n                onChange={onChange}\r\n                required\r\n                placeholder=\"Edit your nweet\"\r\n                autoFocus\r\n                className=\"formInput\"\r\n              />\r\n              <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n            </form>\r\n            <button onClick={toggleEditing} className=\"formBtn cancelBtn\" >Cancel</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h4>{nweetObj.text}</h4>\r\n            <div>{nweetObj.createdAt}</div>\r\n            {\r\n              nweetObj.attachmentURL && (\r\n                <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" />\r\n              )\r\n            }\r\n            {\r\n              isOwner && (\r\n                <div className=\"nweet__actions\">\r\n                  <span onClick={onDeleteClick}>\r\n                    <FontAwesomeIcon icon={faTrash} />\r\n                  </span>\r\n                  <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                  </span>\r\n                </div>\r\n              )\r\n            }\r\n          </>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Nweet;","import { useState } from \"react\";\r\nimport { dbService, db, storageService, storage } from \"fConfig\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObj}) => {\r\n  \r\n  const [ nweet, setNweet ] = useState(\"\");\r\n  const [ attachment, setAttachment ] = useState(\"\");\r\n  \r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if(nweet === '') {\r\n      return;\r\n    }\r\n    let attachmentURL = \"\";\r\n    if(attachment !== \"\") {\r\n      const ref = storage.ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await storage.uploadString(ref, attachment, 'data_url');\r\n      attachmentURL = await storage.getDownloadURL(response.ref);\r\n    }\r\n\r\n    await db.addDoc(\r\n      db.collection(dbService, \"nweets\"),\r\n      {\r\n        text: nweet,\r\n        createdAt: Date.now(),\r\n        creatorId: userObj.uid,\r\n        attachmentURL,\r\n      }\r\n    );\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = e => {\r\n    e.preventDefault();\r\n    const {\r\n      target: {value},\r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = e => {\r\n    const {\r\n      target: {files},\r\n    } = e;\r\n    const theFile = files[0];\r\n    if(theFile) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = e => {\r\n        const {\r\n          currentTarget: {result},\r\n        } = e;\r\n        setAttachment(result);\r\n      };\r\n      reader.readAsDataURL(theFile);\r\n    }\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity: 0,}}/>\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img src={attachment} style={{ backgroundImage: attachment, }} />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment} >\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  )\r\n};\r\n\r\nexport default NweetFactory;","import { useEffect, useState } from \"react\";\r\nimport { dbService, db } from \"fConfig\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({userObj}) => {\r\n\r\n  const [ nweets, setNweets ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    db.onSnapshot(\r\n      db.query(db.collection(dbService, \"nweets\"), db.orderBy(\"createdAt\", \"desc\")),\r\n      snapshot => {\r\n        setNweets(snapshot.docs.map(x => ({id: x.id, ...x.data()})));\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory \r\n        userObj={userObj}\r\n      />\r\n      <div style={{marginTop: 30}}>\r\n        {nweets.map(n => \r\n          <Nweet\r\n            key={n.id}\r\n            nweetObj={n}  \r\n            isOwner={n.creatorId === userObj.uid}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Home;","import { useState } from \"react\";\r\nimport { authService, auth } from \"fConfig\";\r\n\r\nconst AuthForm = () => {\r\n  \r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n\r\n    const {\r\n      target: {name, value},\r\n    } = event;\r\n\r\n    if(name === \"email\") {\r\n      setEmail(value);\r\n    } else if(name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      let data;\r\n      if(newAccount) {\r\n        data = await auth.createUserWithEmailAndPassword(authService, email, password);\r\n      } \r\n      else {\r\n        data = await auth.signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      \r\n    } catch(e) {\r\n      setError(e.message);\r\n    }\r\n  }\r\n\r\n  const toggleAccount = () => setNewAccount(prev => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\r\n        <input type=\"password\" name=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\"/>\r\n        <input type=\"submit\" value=\"Log In\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\"/>\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AuthForm;","import { authService, auth } from \"fConfig\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from 'components/AuthForm';\r\n\r\nconst Auth = () => {\r\n\r\n  const onSocialClick = async event => {\r\n\r\n    const {\r\n      target: {name},\r\n    } = event;\r\n\r\n    let provider;\r\n\r\n    if(name === \"google\") {\r\n      provider = new auth.GoogleAuthProvider();\r\n    } else if(name === \"github\") {\r\n      provider = new auth.GithubAuthProvider();\r\n    }\r\n    await auth.signInWithPopup(authService, provider, auth.browserPopupRedirectResolver)\r\n  }\r\n\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color=\"#04AAFF\"\r\n        size=\"3x\"\r\n        style={{marginBottom: 30}}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div> \r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Auth;","import { authService, auth, dbService, db } from \"fConfig\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [ newDisplayName, setNewDisplayName ] = useState(userObj.displayName);\r\n  \r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = event => {\r\n    const {\r\n      target: {value},\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  }\r\n\r\n  const onSubmit = async event => {\r\n    event.preventDefault();\r\n    if(userObj.displayName !== newDisplayName) {\r\n      await auth.updateProfile(authService.currentUser, {\r\n        displayName: newDisplayName\r\n      });\r\n      refreshUser();\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  const getMyNweets = async () => {\r\n    console.log(userObj.uid);\r\n    const nweets = await db.query(\r\n      db.collection(dbService, \"nweets\"), \r\n      db.where(\"creatorId\", \"==\", userObj.uid),\r\n      db.orderBy(\"createdAt\", \"asc\")\r\n    );\r\n    console.log(nweets);\r\n    const snapshot = await db.getDocs(nweets);\r\n    console.log(snapshot.docs);\r\n    snapshot.docs.forEach(x => console.log(x.data()))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Display name\" \r\n          onChange={onChange} \r\n          value={newDisplayName}\r\n          autoFocus\r\n          className=\"formInput\"\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" \r\n          className=\"formBtn\"\r\n          style={{marginTop: 10,}}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick} >\r\n        Log out\r\n      </span>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Profile;","import { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObj}) => {\r\n\r\n  return (\r\n    <nav>\r\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n          <Link to=\"/\" style={{ marginRight: 10 }}>\r\n            <FontAwesomeIcon icon={faTwitter} color=\"#04AAFF\" size=\"2x\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\"\r\n            style={{\r\n              marginLeft: 10,\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              alignItems: \"center\",\r\n              fontSize: 12,\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faUser} color=\"#04AAFF\" size=\"2x\" />\r\n            <span style={{marginTop: 10}}>\r\n              {userObj.displayName ? `${userObj.displayName}의 Profile` : 'Profile'}\r\n            </span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj}/>}\r\n      <Switch>\r\n        {\r\n          isLoggedIn ? (\r\n            <div \r\n              style={{\r\n                maxWidth: 890,\r\n                width: \"100%\",\r\n                margin: \"0 auth\",\r\n                marginTop: 80,\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n              </Route>\r\n              <Route exact path=\"/profile\">\r\n                <Profile refreshUser={refreshUser} userObj={userObj} />\r\n              </Route>\r\n            </div>\r\n          )\r\n          : (\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          )\r\n        }\r\n      </Switch>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default AppRouter;","import { useEffect, useState } from 'react';\r\nimport { authService } from \"fConfig\";\r\nimport AppRouter from \"components/Router\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\r\n  const [ userObj, setUserObj ] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        setIsLoggedIn(user);\r\n        setUserObj({\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          // updateProfile: (args) \r\n        });\r\n      }\r\n      else {\r\n        // setIsLoggedIn(false);\r\n        setUserObj(false);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    setUserObj(authService.currentUser);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {init ? <AppRouter \r\n        isLoggedIn={isLoggedIn} \r\n        userObj={userObj} \r\n        refreshUser={refreshUser}\r\n      /> : \"initializing...\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}